package us.efsowell.concours.lib;


import static JCNAConcours.AddConcoursEntryDialog.yesNoDialog;
import au.com.bytecode.opencsv.CSVReader;
import au.com.bytecode.opencsv.CSVWriter;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * Copyright Edward F Sowell 2014
 */

/**
 *
 * @author Ed Sowell
 */
public class GenFictitiousMasterList extends javax.swing.JFrame {
    List<FictitiousName> fictitiousNameList;
    MasterPersonnel masterPersonnel;
    int size;

    private class FictitiousName{
        String first;
        String last;
        // Constructor
        public FictitiousName(String aFirst, String aLast){
            first = aFirst;
            last = aLast;
        }

        public String getFirst(){
            return first;
        }
        
        public String getLast(){
            return last;
        }
        
    }
    /**
     * Creates new form GenFictitiousMasterList
     */
    
    // Not used
    public GenFictitiousMasterList() {
        initComponents();
        int returnVal;
        File flFictitiousNames;
        String strAbsPath = null;
        returnVal = fileChooserInputData.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            flFictitiousNames = fileChooserInputData.getSelectedFile();
            strAbsPath = flFictitiousNames.getAbsolutePath(); // this is the the absolute path to the FictitiousNames.txt file as a string
        }
        masterPersonnel = new MasterPersonnel();
        fictitiousNameList = new ArrayList<>();
        size = 10;
        try {
            loadFictitiousLists(strAbsPath);
        } catch (IOException ex) {
            Logger.getLogger(GenFictitiousMasterList.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(int i = 0; i < size; i++){
            
        
        }
    }
    
    public void loadFictitiousLists(String aNameFile) throws IOException{
        
        // Load list of fictitious names
	// Construct BufferedReader from FileReader
	String line = null;
	/*while ((line = br.readLine()) != null) {
		//System.out.println(line);
            String[] lineAry = line.split(" ");
            fictitiousNameList.add(new GenFictitiousMasterList.FictitiousName(lineAry[0], lineAry[1]));
	}
 
	br.close();
        */
		CSVReader reader = new CSVReader(new FileReader(aNameFile), ' ');
                
		String [] nextLine;
		while ((nextLine = reader.readNext()) != null) {
			System.out.println("First Name: " + nextLine[0] + " Last Name: " + nextLine[1] + "\n");
		}
		
		// Try writing it back out as CSV to the console
		CSVReader reader2 = new CSVReader(new FileReader(aNameFile));
		List<String[]> allElements = reader2.readAll();
		StringWriter sw = new StringWriter();
		CSVWriter writer = new CSVWriter(sw);
		writer.writeAll(allElements);
		
		System.out.println("\n\nGenerated CSV File:\n\n");
		System.out.println(sw.toString());
        
        
        // Load list of fictitious street names
        
        // Load list of street extensions (St., Rd., Bl. etc)
        
        // Load list of California cities & zip codes
        }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooserInputData = new javax.swing.JFileChooser();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuItemOpen = new javax.swing.JMenuItem();
        menuItemExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("File");

        menuItemOpen.setText("Open");
        menuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemOpenActionPerformed(evt);
            }
        });
        jMenu1.add(menuItemOpen);

        menuItemExit.setText("Exit");
        menuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExitActionPerformed(evt);
            }
        });
        jMenu1.add(menuItemExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemOpenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuItemOpenActionPerformed

    private void menuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuItemExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GenFictitiousMasterList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GenFictitiousMasterList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GenFictitiousMasterList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GenFictitiousMasterList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GenFictitiousMasterList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser fileChooserInputData;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem menuItemExit;
    private javax.swing.JMenuItem menuItemOpen;
    // End of variables declaration//GEN-END:variables
}
